# coding: utf-8

"""
    APIv3 (Beta)

     # Introduction Just a quick pick!!! This is our new version of API. Remember, it is not stable yet!!! But we invite you play with it and give us your feedback ;) # Getting Started  E-goi can be integrated with many environments and programming languages via our REST API. We've created a developer focused portal to give your organization a clear and quick overview of how to integrate with E-goi. The developer portal focuses on scenarios for integration and flow of events. We recommend familiarizing yourself with all of the content in the developer portal, before start using our rest API.   The E-goi  APIv3 is served over HTTPS. To ensure data privacy, unencrypted HTTP is not supported.  Request data is passed to the API by POSTing JSON objects to the API endpoints with the appropriate parameters.   BaseURL = api.egoiapp.com  # HTTP Methods for RESTful Services This API supports 5 HTTP methods:  * <b>GET</b>: The HTTP GET method is used to **read** (or retrieve) a representation of a resource. * <b>POST</b>: The POST verb is most-often utilized to **create** new resources. * <b>PATCH</b>: PATCH is used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource * <b>PUT</b>: PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. * <b>DELETE</b>: DELETE is pretty easy to understand. It is used to **delete** a resource identified by a URI.  # Authentication   We use a custom authentication method, you will need a apikey that you can find in your account settings. Below you will see a curl example to get your account information:  #!/bin/bash  curl -X GET 'https://api.egoiapp.com/my-account' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>'  Here you can see a curl Post example with authentication:  #!/bin/bash  curl -X POST 'http://api.egoiapp.com/tags' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>' \\  -H 'Content-Type: application/json' \\  -d '{`name`:`Your custom tag`,`color`:`#FFFFFF`}'  <security-definitions/>  # noqa: E501

    The version of the OpenAPI document: 3.0.0-beta
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from egoi-api.configuration import Configuration


class ComplexContactAllOfPushStats(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'sent': 'int',
        'delivered': 'int',
        'not_delivered': 'int',
        'views': 'int',
        'clicks': 'int',
        'last_view_date': 'datetime'
    }

    attribute_map = {
        'sent': 'sent',
        'delivered': 'delivered',
        'not_delivered': 'not_delivered',
        'views': 'views',
        'clicks': 'clicks',
        'last_view_date': 'last_view_date'
    }

    def __init__(self, sent=None, delivered=None, not_delivered=None, views=None, clicks=None, last_view_date=None, local_vars_configuration=None):  # noqa: E501
        """ComplexContactAllOfPushStats - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._sent = None
        self._delivered = None
        self._not_delivered = None
        self._views = None
        self._clicks = None
        self._last_view_date = None
        self.discriminator = None

        if sent is not None:
            self.sent = sent
        if delivered is not None:
            self.delivered = delivered
        if not_delivered is not None:
            self.not_delivered = not_delivered
        if views is not None:
            self.views = views
        if clicks is not None:
            self.clicks = clicks
        self.last_view_date = last_view_date

    @property
    def sent(self):
        """Gets the sent of this ComplexContactAllOfPushStats.  # noqa: E501

        Push messages sent to the contact  # noqa: E501

        :return: The sent of this ComplexContactAllOfPushStats.  # noqa: E501
        :rtype: int
        """
        return self._sent

    @sent.setter
    def sent(self, sent):
        """Sets the sent of this ComplexContactAllOfPushStats.

        Push messages sent to the contact  # noqa: E501

        :param sent: The sent of this ComplexContactAllOfPushStats.  # noqa: E501
        :type: int
        """

        self._sent = sent

    @property
    def delivered(self):
        """Gets the delivered of this ComplexContactAllOfPushStats.  # noqa: E501

        Push messages delivered to the contact  # noqa: E501

        :return: The delivered of this ComplexContactAllOfPushStats.  # noqa: E501
        :rtype: int
        """
        return self._delivered

    @delivered.setter
    def delivered(self, delivered):
        """Sets the delivered of this ComplexContactAllOfPushStats.

        Push messages delivered to the contact  # noqa: E501

        :param delivered: The delivered of this ComplexContactAllOfPushStats.  # noqa: E501
        :type: int
        """

        self._delivered = delivered

    @property
    def not_delivered(self):
        """Gets the not_delivered of this ComplexContactAllOfPushStats.  # noqa: E501

        Push messages that were not delivered to the contact  # noqa: E501

        :return: The not_delivered of this ComplexContactAllOfPushStats.  # noqa: E501
        :rtype: int
        """
        return self._not_delivered

    @not_delivered.setter
    def not_delivered(self, not_delivered):
        """Sets the not_delivered of this ComplexContactAllOfPushStats.

        Push messages that were not delivered to the contact  # noqa: E501

        :param not_delivered: The not_delivered of this ComplexContactAllOfPushStats.  # noqa: E501
        :type: int
        """

        self._not_delivered = not_delivered

    @property
    def views(self):
        """Gets the views of this ComplexContactAllOfPushStats.  # noqa: E501

        Push messages that were viewed by the contact  # noqa: E501

        :return: The views of this ComplexContactAllOfPushStats.  # noqa: E501
        :rtype: int
        """
        return self._views

    @views.setter
    def views(self, views):
        """Sets the views of this ComplexContactAllOfPushStats.

        Push messages that were viewed by the contact  # noqa: E501

        :param views: The views of this ComplexContactAllOfPushStats.  # noqa: E501
        :type: int
        """

        self._views = views

    @property
    def clicks(self):
        """Gets the clicks of this ComplexContactAllOfPushStats.  # noqa: E501

        Total number of clicks made by the contact  # noqa: E501

        :return: The clicks of this ComplexContactAllOfPushStats.  # noqa: E501
        :rtype: int
        """
        return self._clicks

    @clicks.setter
    def clicks(self, clicks):
        """Sets the clicks of this ComplexContactAllOfPushStats.

        Total number of clicks made by the contact  # noqa: E501

        :param clicks: The clicks of this ComplexContactAllOfPushStats.  # noqa: E501
        :type: int
        """

        self._clicks = clicks

    @property
    def last_view_date(self):
        """Gets the last_view_date of this ComplexContactAllOfPushStats.  # noqa: E501

        Date of the last push message view of the contact  # noqa: E501

        :return: The last_view_date of this ComplexContactAllOfPushStats.  # noqa: E501
        :rtype: datetime
        """
        return self._last_view_date

    @last_view_date.setter
    def last_view_date(self, last_view_date):
        """Sets the last_view_date of this ComplexContactAllOfPushStats.

        Date of the last push message view of the contact  # noqa: E501

        :param last_view_date: The last_view_date of this ComplexContactAllOfPushStats.  # noqa: E501
        :type: datetime
        """

        self._last_view_date = last_view_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComplexContactAllOfPushStats):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ComplexContactAllOfPushStats):
            return True

        return self.to_dict() != other.to_dict()
